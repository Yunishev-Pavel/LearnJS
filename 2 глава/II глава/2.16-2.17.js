//Function Expression
// Отличия от Function Declaration

//Разный синтаксис: Function Declaration использует специальный синтаксис для объявления функций,
//Function Expression — похож на объявление переменной.
//Функцию, объявленную с помощью Function Declaration синтаксиса, можно использовать до объявления:

// Функция – это значение, представляющее «действие»
// Обычные значения, такие как строки или числа представляют собой данные.

// Функции, с другой стороны, можно воспринимать как действия.

// Мы можем передавать их из переменной в переменную и запускать, когда захотим

let sayHi = function () {
  alert("Привет"); // Function Expression
};
let age = prompt("Сколько Вам лет?", 18);

let welcome =
  age < 18
    ? function () {
        alert("Привет!");
      }
    : function () {
        alert("Здравствуйте!");
      }; // анонимные функции

welcome();

let func = (arg1, arg2, ...argN) => expression; // arrow functions

// Если у нас только один аргумент, то круглые скобки вокруг параметров можно опустить, сделав запись ещё короче:
//Если аргументов нет, круглые скобки будут пустыми, но они должны присутствовать:

// Перепишите с использованием функции-стрелки
// Замените код Function Expression стрелочной функцией:
function ask(question, yes, no) {
  if (confirm(question)) yes();
  else no();
}

ask(
  "Вы согласны?",
  function () {
    alert("Вы согласились.");
  },
  function () {
    alert("Вы отменили выполнение.");
  }
);

///
function ask(question, yes, no) {
  if (confirm(question)) yes();
  else no();
}

ask(
  "Вы согласны?",
  () => alert("Вы согласились."),
  () => alert("Вы отменили выполнение.")
);
